{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/cell.jsx","components/cellcontainer.jsx","components/colorSelect.jsx","components/canvas.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Cell","state","mouseIsDown","paint","size","cellColor","handlePaintMove","props","mouseDown","currentColor","setState","handlePaintClick","selectedColor","className","this","onMouseMove","onClick","Component","CellContainer","styles","marginRight","marginLeft","marginTop","paddingTop","paddingBottom","backgroundColor","borderRadius","borderWidth","borderColor","width","height","cellpadding","cellspacing","cellPadding","cellSpacing","display","handleSelect","pos","console","log","toggleMouseDown","toggleMouseUp","cols","rows","gridInner","grid","curKeyVal","i","j","push","onSelect","style","onMouseDown","onMouseUp","gridCells","ColorSelect","colors","clrName","clrCode","clrCompliment","currentColorPaste","colorName","map","color","fontWeight","Canvas","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.974526ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\nimport \"./cell.css\";\r\n\r\nclass Cell extends Component {\r\n\tstate = {\r\n\t\tmouseIsDown: false,\r\n\t\tpaint: false,\r\n\t\tsize: 20,\r\n\t\tcellColor: \"White\",\r\n\t};\r\n\r\n\thandlePaintMove = () => {\r\n\t\tif (!this.props.mouseDown) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet cellColor = this.props.currentColor;\r\n\t\tthis.setState({ cellColor });\r\n\t};\r\n\r\n\thandlePaintClick = () => {\r\n\t\tlet cellColor = this.props.currentColor;\r\n\t\tthis.setState({ cellColor });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tclassName={this.selectedColor()}\r\n\t\t\t\tonMouseMove={() => this.handlePaintMove()}\r\n\t\t\t\t// OnClick added to point painting (No moving)\r\n\t\t\t\tonClick={() => this.handlePaintClick()}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\r\n\tselectedColor = () => {\r\n\t\tlet curClassName = \"cellBase cell\" + this.state.cellColor;\r\n\t\treturn curClassName;\r\n\t};\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from \"react\";\r\nimport Cell from \"./cell\";\r\n\r\nclass CellContainer extends Component {\r\n\tstate = { mouseIsDown: false, size: 25 };\r\n\r\n\tstyles = {\r\n\t\tmarginRight: 0,\r\n\t\tmarginLeft: 0,\r\n\t\tmarginTop: 0,\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: this.state.size,\r\n\t\tbackgroundColor: \"#1EE7E8\",\r\n\t\tborderRadius: 0,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: \"#fff\",\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t\tcellpadding: 0,\r\n\t\tcellspacing: 0,\r\n\t\tcellPadding: 0,\r\n\t\tcellSpacing: 0,\r\n\t\tdisplay: \"block\",\r\n\t};\r\n\r\n\thandleSelect = (pos) => {\r\n\t\tconsole.log(\"Hello world at \" + pos);\r\n\t};\r\n\r\n\tgridCells(cols, rows) {\r\n\t\tlet gridInner = [];\r\n\t\tlet grid = [];\r\n\t\tlet curKeyVal = 0;\r\n\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\tfor (let j = 0; j < cols; j++) {\r\n\t\t\t\tcurKeyVal = i * cols + j;\r\n\t\t\t\tgridInner.push(\r\n\t\t\t\t\t<td key={\"td_\" + curKeyVal}>\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tkey={\"cell_\" + curKeyVal}\r\n\t\t\t\t\t\t\tonSelect={this.handleSelect}\r\n\t\t\t\t\t\t\tpos={[j, i]}\r\n\t\t\t\t\t\t\tmouseDown={this.state.mouseIsDown}\r\n\t\t\t\t\t\t\tcurrentColor={this.props.currentColor}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tgrid.push(\r\n\t\t\t\t<tr\r\n\t\t\t\t\tcellPadding={0}\r\n\t\t\t\t\tcellSpacing={0}\r\n\t\t\t\t\tstyle={this.styles}\r\n\t\t\t\t\tkey={\"tr_\" + curKeyVal}\r\n\t\t\t\t>\r\n\t\t\t\t\t{gridInner}\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t\tgridInner = [];\r\n\t\t}\r\n\t\treturn grid;\r\n\t}\r\n\r\n\ttoggleMouseDown = () => {\r\n\t\tlet mouseIsDown = true;\r\n\t\tconsole.log(\"mouseIsDown set to \" + mouseIsDown);\r\n\t\tthis.setState({ mouseIsDown });\r\n\t};\r\n\r\n\ttoggleMouseUp = () => {\r\n\t\tlet mouseIsDown = false;\r\n\t\tconsole.log(\"mouseIsDown set to \" + mouseIsDown);\r\n\t\tthis.setState({ mouseIsDown });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={this.styles}\r\n\t\t\t\tonMouseDown={this.toggleMouseDown}\r\n\t\t\t\tonMouseUp={this.toggleMouseUp}\r\n\t\t\t>\r\n\t\t\t\t{this.gridCells(50, 50)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CellContainer;\r\n","import React, { Component } from \"react\";\r\nimport \"./cell.css\";\r\n\r\nclass ColorSelect extends Component {\r\n\tstate = {\r\n\t\tcolors: [\r\n\t\t\t{ clrName: \"White\", clrCode: \"#f8f9fa\", clrCompliment: \"#070605\" },\r\n\t\t\t{ clrName: \"Black\", clrCode: \"#343a40\", clrCompliment: \"#f8f9fa\" },\r\n\t\t\t{ clrName: \"Red\", clrCode: \"#dc3545\", clrCompliment: \"#f8f9fa\" },\r\n\t\t\t{ clrName: \"Green\", clrCode: \"#28a745\", clrCompliment: \"#f8f9fa\" },\r\n\t\t\t{ clrName: \"Blue\", clrCode: \"#007bff\", clrCompliment: \"#f8f9fa\" },\r\n\t\t],\r\n\t};\r\n\r\n\tcurrentColorPaste = (colorName) => {\r\n\t\tlet currentColor = \"cellBase cell\";\r\n\t\tcurrentColor += colorName;\r\n\t\treturn currentColor;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.colors.map((color) => (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-primary cellGreen\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t//backgroundColor: color.clrCode,\r\n\t\t\t\t\t\t\tcolor: color.clrCompliment,\r\n\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\tborderColor: \"#343a40\",\r\n\t\t\t\t\t\t\tbackgroundColor: color.clrCode,\r\n\t\t\t\t\t\t\twidth: 90,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => this.props.onSelect(color.clrName)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{color.clrName}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t))}\r\n\t\t\t\t<box>\r\n\t\t\t\t\tCurrent Color:\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={this.currentColorPaste(this.props.currentColor)}\r\n\t\t\t\t\t></button>\r\n\t\t\t\t</box>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ColorSelect;\r\n","import React, { Component } from \"react\";\r\nimport CellContainer from \"./cellcontainer\";\r\nimport ColorSelect from \"./colorSelect\";\r\nimport Cell from \"./cell\";\r\n\r\nclass Canvas extends Component {\r\n\tstate = { currentColor: \"Black\" };\r\n\r\n\thandleSelect = (selectedColor) => {\r\n\t\tlet currentColor = selectedColor;\r\n\t\tthis.setState({ currentColor });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ColorSelect\r\n\t\t\t\t\tcurrentColor={this.state.currentColor}\r\n\t\t\t\t\tonSelect={this.handleSelect}\r\n\t\t\t\t/>\r\n\t\t\t\t<CellContainer currentColor={this.state.currentColor} />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Canvas from \"./components/canvas\";\nimport ColorSelect from \"./components/colorSelect\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Canvas />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}